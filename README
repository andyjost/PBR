This is PBR version 1.0
============================

Copyright (c) 2011 Andy Jost
All rights reserved.


License information
-------------------

See the file "LICENSE.txt" for information on the history of this
software, terms & conditions for usage, and a DISCLAIMER OF ALL
WARRANTIES.


What is PBR?
------------

PBR is a microlibrary that extends Boost.Python to provide support for treating
Python objects as models of Boost.Range.  If you are already using
Boost.Python, PBR will give you new tools that may help you write cleaner
interfaces to Python.

For more information, visit www.boost.org/libs/python (Boost.Python),
www.boost.org/libs/range (Boost.Range), and www.python.org (Python).


Getting Started
---------------
Make sure you have Boost and Python installed.  PBR was tested with Boost
version 1.46 and Python version 2.6.5.  PBR requires linking to the
Boost.Python runtime libraries.  Refer to the Boost documentation for help
building Boost.Python.  Newer versions of Boost, and newer versions of Python
2.x will probably work just fine.  PBR was not tested against any version of
Python 3.

After you have the dependencies set up, check the paths in make.include, then
test PBR by issuing "make test" from the test/ directory.


Build Help
----------
PBR is a header-only library that depends on Boost.Python (which is not a
header-only library).  On Linux, you would most commonly use PBR and
Boost.Python to extend Python by creating a new shared object (.so) file
containing a Python module.  The module is accessed from Python through the
"import" facility.

To compile your PBR-dependent project, you will need to be sure the compiler's
include paths are configured to find Python, Boost, and PBR headers.  You will
also need to link against a version of the Boost.Python runtime library, e.g.,
libboost_python.so.

If you link against the dynamic Boost.Python library, you may need to modify
LD_LIBRARY_PATH before starting Python, so that the Boost library is found at
runtime.  That is most likely the problem if Python raises an error like the
following when you try to import your extension:

    ImportError: libboost_python.so.1.46.1: cannot open shared object file: No
        such file or directory

See the test/ and examples/ subdirectories in this project for examples.


Author
------
PBR was written by Andy Jost.  Contact me at ajost@synopsys.com.

